import telebot
import config
import random

from telebot import types

bot = telebot.TeleBot(config.TOKEN)


@bot.message_handler(commands=['start'])
def welcome(message):
    sti = open('static/2193800188773011180.tgs', 'rb')
    bot.send_sticker(message.chat.id, sti)

    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    item1 = types.KeyboardButton("roll")
    item2 = types.KeyboardButton("–ö–∞–∫ –¥–µ–ª–∞?")
    item3 = types.KeyboardButton("–ß–∞—Å—Ç–æ –∑–∞–¥–æ–≤–∞–µ–º—ã–π –≤–æ–ø—Ä–æ—Å")

    markup.add(item1, item2, item3)

    bot.send_message(message.chat.id, '–î–æ–±—Ä–æ–µ —É—Ç—Ä–æ —Ö–æ–∑—è–∏–Ω, {0.first_name}!\n–Ø - <b>{1.first_name}</b>, –±–æ—Ç —Å–æ–∑–¥–∞–Ω–Ω—ã–π, —á—Ç–æ–±—ã —Ç—ã –Ω–µ –±—ã–ª –æ–¥–∏–Ω–æ–∫–∏–º'.format(message.from_user, bot.get_me()),
                     parse_mode='html', reply_markup=markup)



@bot.message_handler(content_types=['text'])
def lalala(message):
    if message.chat.type == 'private':
        if message.text == 'roll':
            bot.send_message(message.chat.id, str(random.randint(0, 100)))
        elif message.text == '–ö–∞–∫ –¥–µ–ª–∞?':

            markup = types.InlineKeyboardMarkup(row_width=2)
            item1 = types.InlineKeyboardButton("–•–æ—Ä–æ—à–æ", callback_data='good')
            item2 = types.InlineKeyboardButton("–ù–µ –æ—á–µ–Ω—å", callback_data='bad')
            markup.add(item1, item2)

            bot.send_message(message.chat.id, '–ß—É–≤—Å—Ç–≤—É—é —Å–µ–±—è –æ—Ç–ª–∏—á–Ω–æ, –∞ –í—ã?', reply_markup=markup)

        elif message.text == '–ß–∞—Å—Ç–æ –∑–∞–¥–æ–≤–∞–µ–º—ã–π –≤–æ–ø—Ä–æ—Å':

            markup1 = types.InlineKeyboardMarkup(row_width=2)
            item1 = types.InlineKeyboardButton("–Ø–Ω–∞_—Ü–∏—Å—Ç", callback_data='beka')
            item2 = types.InlineKeyboardButton("Daka", callback_data='daka')
            markup1.add(item1, item2)
            bot.send_message(message.chat.id, '–ö—Ç–æ –∏–∑ –Ω–∏—Ö –ø–ª–æ–≤–æ –∏–≥—Ä–∞–µ—Ç:', reply_markup=markup1)


        else:
            bot.send_message(message.chat.id, '–Ø –Ω–µ –∑–Ω–∞—é —á—Ç–æ –æ—Ç–≤–µ—Ç–∏—Ç—å(')


@bot.callback_query_handler(func=lambda call: True)
def callback_inline(call):
    try:
        if call.message:
            if call.data == 'good':
                bot.send_message(call.message.chat.id, '–í–æ—Ç –∏ –æ—Ç–ª–∏—á–Ω–µ–Ω—å–∫–æ üòä')
            elif call.data == 'bad':
                bot.send_message(call.message.chat.id, '–ë—ã–≤–∞–µ—Ç üò¢')
            elif call.data == 'beka':
                bot.send_message(call.message.chat.id, '–ü—Ä–∞–≤–∏–ª—å–Ω–æ)')
            elif call.data == 'daka':
                bot.send_message(call.message.chat.id, '–ü—Ä–∞–≤–∏–ª—å–Ω–æ)')

            # remove inline buttons
            bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id, text="–ö—Ç–æ –∏–∑ –Ω–∏—Ö –ø–ª–æ–≤–æ –∏–≥—Ä–∞–µ—Ç:",
                                  reply_markup=None)

            # show alert
            bot.answer_callback_query(callback_query_id=call.id, show_alert=False,
                                      text="Test")

    except Exception as e:
        print(repr(e))


bot.polling(none_stop=True)
